// Gráfico Preferência de Pacientes por Médico (barras agrupadas)
const ctx = document.getElementById('graficoPreferencia').getContext('2d');

const medicos = ['Dr. João', 'Dr. Maria', 'Dr. Pedro', 'Dr. Ana', 'Dr. Paulo',
  'Dr. Luana', 'Dr. Carlos', 'Dr. Fernanda', 'Dr. Igor', 'Dr. Bruna',
  'Dr. Lucas', 'Dr. Marina', 'Dr. Rafael', 'Dr. Clara', 'Dr. Otávio']

const dadosSim = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150]
const dadosNao = [15, 18, 28, 38, 44, 65, 75, 85, 95,105,115,125,135,145,155]
const dadosPrimeira =[5, 10, 20, 35, 42, 58, 68, 78, 88, 98,108,118,128,138,148]


const labels = [];
const dataSim = [];
const dataNao = [];
const dataPrimeira = [];



const backgroundColorSim = [];
const backgroundColorNao = [];
const backgroundColorPrimeira = [];


const borderColorSim = [];
const borderColorNao = [];
const borderColorPrimeira = [];


for (let i = 0; i < medicos.length; i++) {
  labels.push(medicos[i]);

  dataSim.push(dadosSim[i]);
  backgroundColorSim.push('rgba(54, 162, 235, 0.7)');
  borderColorSim.push('rgba(54, 162, 235, 1)');

  dataNao.push(dadosNao[i]);
  backgroundColorNao.push('rgba(255, 99, 132, 0.7)');
  borderColorNao.push('rgba(255, 99, 132, 1)');

  dataPrimeira.push(dadosPrimeira[i]);
  backgroundColorPrimeira.push('rgba(255, 206, 86, 0.7)');
  borderColorPrimeira.push('rgba(255, 206, 86, 1)');

  if (i < medicos.length - 1) {
    labels.push(''); // espaço

    dataSim.push(0);
    backgroundColorSim.push('rgba(0, 0, 0, 0)');
    borderColorSim.push('rgba(0, 0, 0, 0)');

    dataNao.push(0);
    backgroundColorNao.push('rgba(0, 0, 0, 0)');
    borderColorNao.push('rgba(0, 0, 0, 0)');

    dataPrimeira.push(0);
    backgroundColorPrimeira.push('rgba(0, 0, 0, 0)');
    borderColorPrimeira.push('rgba(0, 0, 0, 0)');
  }
}


const data = {
  labels: labels,
  datasets: [
    {
      label: 'P/M/A - SIM',
      data: dataSim,
      backgroundColor: backgroundColorSim,
      borderColor: borderColorSim,
      borderWidth: 1,
    },
    {
      label: 'P/M/A- NÃO',
      data: [10,20,30,40,50,60,70,80,90,110,120,130,140,160,170],
      backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(0, 0, 0, 0)','rgba(255, 99, 132, 0.7)',],
      borderColor: 'rgba(255, 99, 132, 1)',
      borderWidth: 1,
    },
    {
      label: 'P/V/P - SIM',
      data: [10,20,30,40,50,60,70,80,90,110,120,130,140,160,170],
      backgroundColor: 'rgba(255, 99, 132, 0.7)',
      borderColor: 'rgba(255, 99, 132, 1)',
      borderWidth: 1,
    }
  ],
};

const config = {
  type: 'bar',
  data: data,
  options: {
    responsive: true,
    plugins: {
      legend: {
        labels: {
          color: 'black',
          font: {
            family: 'Inter, ui-sans-serif, system-ui',
            size: 14,
            weight: '600',
          },
        },
      },
    },
    scales: {
      x: {
        stacked: false,
        ticks: {
          color: 'black',
          font: {
            family: 'Inter, ui-sans-serif, system-ui',
            size: 12,
            weight: '500',
          },
        },
        grid: {
          color: '#eee',
        },
      },
      y: {
        beginAtZero: true,
        ticks: {
          color: 'black',
          font: {
            family: 'Inter, ui-sans-serif, system-ui',
            size: 12,
            weight: '500',
          },
        },
        grid: {
          color: '#eee',
        },
      },
    },
  },
};

const barGroupedChart = new Chart(ctx, config);
